name: Elixir CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  MIX_ENV: test

jobs:
  setup:
    name: Dependency Setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Elixir
        uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
        with:
          elixir-version: '1.12'
          otp-version: '24'
      - name: Restore dependencies cache
        uses: actions/cache@v2
        id: mix-cache
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
      - name: Install dependencies
        if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get
          mix deps.compile
  linting:
    needs: setup
    name: Lint code
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: '1.12'
        otp-version: '24'
    - name: Restore dependencies cache
      uses: actions/cache@v2
      id: mix-cache
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
    - name: Check Formatting
      run: mix format --check-formatted
    - name: Run Credo
      run: mix credo --strict --all
  dializer:
    needs: setup
    name: Run type checks
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: '1.12'
        otp-version: '24'
    - name: Restore dependencies cache
      uses: actions/cache@v2
      id: mix-cache
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
    - name: Retrieve PLT Cache
      uses: actions/cache@v1
      id: plt-cache
      with:
        path: priv/plts
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
    - name: Create PLTs
      if: steps.plt-cache.outputs.cache-hit != 'true'
      run: |
        mkdir -p priv/plts
        mix dialyzer --plt
    - name: Run dialyzer
      run: mix dialyzer --no-check --halt-exit-status
  test:
    needs: setup
    name: Run tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Elixir
      uses: erlef/setup-elixir@885971a72ed1f9240973bd92ab57af8c1aa68f24
      with:
        elixir-version: '1.12'
        otp-version: '24'
    - name: Restore dependencies cache
      uses: actions/cache@v2
      id: mix-cache
      with:
        path: |
          deps
          _build
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-mix-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
    - name: Run tests
      run: mix test --no-start
